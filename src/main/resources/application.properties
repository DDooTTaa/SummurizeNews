# DB 설정 (hikari란?)
#spring.datasource.hikari.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@127.0.0.1:1521:xe
#spring.datasource.hikari.username=hr
#spring.datasource.hikari.password=spring
#spring.datasource.hikari.connection-timeout=10000
#spring.datasource.hikari.validation-timeout=10000
#spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL

###############################
# DB 설정
###############################
spring.datasource.hikari.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.hikari.jdbc-url=jdbc:log4jdbc:oracle:thin:@127.0.0.1:1521:XE
spring.datasource.hikari.username=hr
spring.datasource.hikari.password=spring
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.validation-timeout=10000
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL

###############################
# 포트 설정 
###############################
server.port=14040

###############################
# 카멜 표기법 설정 - Mybatis
###############################
# 언더바 다음 자동으로 매핑해줌 
mybatis.configuration.map-underscore-to-camel-case=true  

# 화면, 리소스 cache 설정 
# false -> 재시작 없이 새로고침만으로 반영됨
spring.thymeleaf.cache=false 
spring.resources.cache.period=0

###############################
# JPA 설정
############################### 
## 자동으로 처리할 DDL 종류 선택
# create는 처음에만 하면 됨 그 다음엔 update
#spring.jpa.hibernate.ddl-auto=create 
spring.jpa.hibernate.ddl-auto=update

# 쿼리 관련 내용을 sql formte에 잡아서 보여줌 / comment 보여줌
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

## 사용할 DB 선택 - 오라클
spring.jpa.database=oracle
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
# spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect # MySQL

## JPA엔티티 연관관계를 바탕으로 테이블 생성과 같은 스크립트를 자동으로 실행  
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.show_sql=true

## SQL 로그 설(descriptor)
logging.level.org.hibernate.type.descriptor.sql=trace

## 하이버네이트의 새오룬 ID 생성 옵션에서 사용 여부 설정 
spring.jpa.hibernate.use-new-id-generator-mappings=false

## 보안 로그 레벨 설정
logging.level.org.springframework.security=debug

spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false

spring.security.user.name=user
spring.security.user.password=1234

